$tools-height: 34px;

[class^='s-'] > div.display {
    padding-top: 0;
    padding-bottom: 0;
}

.display {
    .tools {
        opacity: 0;
        transition: visibility 0s 0.5s, opacity 0.5s linear;
        transition: opacity fade 0.3s;
        position: absolute;
        align-self: flex-end;
        height: $tools-height;

        .refresh-btn {
            padding: 4px 14px 4px 14px;
            box-sizing: border-box;
            background-color: var(--color-3);
            color: var(--color-1);
            border: 0;
        }

        span {
            display: inline-block;
        }

        &:hover {
            opacity: 1;
            transition: opacity 0.5s linear;
        }
    }

    .dynamic {
        position: relative;
        overflow: hidden;
        border: 2px dashed var(--display-border-color);
        background-color: var(--display-bkg-color);
        height: 100vh;
        max-width: 100%;
        resize: both;
        overflow: auto;
        box-sizing: border-box;

        .empty-component {
        }

        .parsing-error {
            position: absolute;
            background-color: var(--color-1);
            opacity: 0.9;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            padding: 20px;
        }

        .message {
            position: fixed;
            bottom: 0;
            height: 0px;
            border: none;
            border-radius: 8px 8px 0 0;
            z-index: 99;
            text-align: center;

            transition: all 2s ease-out;

            &.code-error,
            &.code-invoking,
            &.code-rendering {
                opacity: 0.9;
                height: auto;
                padding: 5px;
                border: 1px solid;
            }

            &.code-error {
                background-color: var(--error-msg-bkg-color);
                border-color: var(--error-msg-border-color);
            }

            &.code-invoking {
                background-color: var(--invoking-msg-bkg-color);
                border-color: var(--invoking-msg-border-color);
            }

            &.code-rendering {
                background-color: var(--rendering-msg-bkg-color);
                border-color: var(--rendering-msg-border-color);
            }
        }
    }
}
